<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="SerialPort1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        mbkeKsW/AAAAAElFTkSuQmCC
</value>
  </data>
</root>